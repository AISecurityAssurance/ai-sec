version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: sa_backend
    environment:
      # Application settings
      APP_NAME: "Security Analysis Platform"
      ENVIRONMENT: development
      DEBUG: "true"
      SECRET_KEY: "dev-secret-key-change-in-production"
      
      # Database settings - using container names
      POSTGRES_HOST: sa_postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: security_analyst
      POSTGRES_USER: sa_user
      POSTGRES_PASSWORD: sa_password
      
      # Redis settings
      REDIS_HOST: sa_redis
      REDIS_PORT: 6379
      
      # Neo4j settings
      NEO4J_URI: bolt://sa_neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: neo4j_password
      
      # Model provider settings (add your keys here)
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GROQ_API_KEY: ${GROQ_API_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      
    volumes:
      - .:/app  # Mount current directory for hot reloading
      - /app/__pycache__  # Exclude pycache
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - security_analyst_network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Include services from base docker-compose.yml
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    networks:
      - security_analyst_network

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    networks:
      - security_analyst_network

  neo4j:
    extends:
      file: docker-compose.yml
      service: neo4j
    networks:
      - security_analyst_network

  # Optional: Include management tools
  pgadmin:
    extends:
      file: docker-compose.yml
      service: pgadmin
    networks:
      - security_analyst_network

networks:
  security_analyst_network:
    external: true

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  neo4j_logs:
  pgadmin_data: